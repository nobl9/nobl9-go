// Code generated by ifacemaker; DO NOT EDIT.

package v1

import (
	"context"
	"net/http"
	"net/url"

	"github.com/nobl9/nobl9-go/manifest"
	v1alphaAgent "github.com/nobl9/nobl9-go/manifest/v1alpha/agent"
	v1alphaAlertMethod "github.com/nobl9/nobl9-go/manifest/v1alpha/alertmethod"
	v1alphaAlertPolicy "github.com/nobl9/nobl9-go/manifest/v1alpha/alertpolicy"
	v1alphaAlertSilence "github.com/nobl9/nobl9-go/manifest/v1alpha/alertsilence"
	v1alphaAnnotation "github.com/nobl9/nobl9-go/manifest/v1alpha/annotation"
	v1alphaBudgetAdjustment "github.com/nobl9/nobl9-go/manifest/v1alpha/budgetadjustment"
	v1alphaDataExport "github.com/nobl9/nobl9-go/manifest/v1alpha/dataexport"
	v1alphaDirect "github.com/nobl9/nobl9-go/manifest/v1alpha/direct"
	v1alphaProject "github.com/nobl9/nobl9-go/manifest/v1alpha/project"
	v1alphaReport "github.com/nobl9/nobl9-go/manifest/v1alpha/report"
	v1alphaRoleBinding "github.com/nobl9/nobl9-go/manifest/v1alpha/rolebinding"
	v1alphaService "github.com/nobl9/nobl9-go/manifest/v1alpha/service"
	v1alphaSLO "github.com/nobl9/nobl9-go/manifest/v1alpha/slo"
	v1alphaUserGroup "github.com/nobl9/nobl9-go/manifest/v1alpha/usergroup"
	"github.com/nobl9/nobl9-go/sdk/models"
)

type Endpoints interface {
	Apply(ctx context.Context, objects []manifest.Object) error
	Delete(ctx context.Context, objects []manifest.Object) error
	DeleteByName(ctx context.Context, kind manifest.Kind, project string, names ...string) error
	Get(ctx context.Context, kind manifest.Kind, header http.Header, query url.Values) ([]manifest.Object, error)
	MoveSLOs(ctx context.Context, payload models.MoveSLOs) error
	GetV1alphaProjects(ctx context.Context, params GetProjectsRequest) ([]v1alphaProject.Project, error)
	GetV1alphaServices(ctx context.Context, params GetServicesRequest) ([]v1alphaService.Service, error)
	GetV1alphaSLOs(ctx context.Context, params GetSLOsRequest) ([]v1alphaSLO.SLO, error)
	GetV1alphaAgents(ctx context.Context, params GetAgentsRequest) ([]v1alphaAgent.Agent, error)
	GetV1alphaAlertPolicies(ctx context.Context, params GetAlertPolicyRequest) ([]v1alphaAlertPolicy.AlertPolicy, error)
	GetV1alphaAlertSilences(ctx context.Context, params GetAlertSilencesRequest) ([]v1alphaAlertSilence.AlertSilence, error)
	GetV1alphaAlertMethods(ctx context.Context, params GetAlertMethodsRequest) ([]v1alphaAlertMethod.AlertMethod, error)
	GetV1alphaAlerts(ctx context.Context, params GetAlertsRequest) (*GetAlertsResponse, error)
	GetV1alphaDirects(ctx context.Context, params GetDirectsRequest) ([]v1alphaDirect.Direct, error)
	GetV1alphaDataExports(ctx context.Context, params GetDataExportsRequest) ([]v1alphaDataExport.DataExport, error)
	GetV1alphaRoleBindings(ctx context.Context, params GetRoleBindingsRequest) ([]v1alphaRoleBinding.RoleBinding, error)
	GetV1alphaAnnotations(ctx context.Context, params GetAnnotationsRequest) ([]v1alphaAnnotation.Annotation, error)
	GetV1alphaUserGroups(ctx context.Context, params GetAnnotationsRequest) ([]v1alphaUserGroup.UserGroup, error)
	// GetAlerts is exported for internal usage, use methods returning
	// concrete manifest.Version instead, like GetV1alphaAlerts
	GetAlerts(ctx context.Context, header http.Header, query url.Values) ([]manifest.Object, int, error)
	GetBudgetAdjustments(ctx context.Context, params GetBudgetAdjustmentRequest) ([]v1alphaBudgetAdjustment.BudgetAdjustment, error)
	GetReports(ctx context.Context, params GetReportsRequest) ([]v1alphaReport.Report, error)
}
