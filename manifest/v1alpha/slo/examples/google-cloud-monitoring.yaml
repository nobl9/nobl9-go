# Metric type: good over total
# Budgeting method: Occurrences
# Time window type: Calendar
- apiVersion: n9/v1alpha
  kind: SLO
  metadata:
    name: api-server-slo
    displayName: API Server SLO
    project: default
    labels:
      area:
      - latency
      - slow-check
      env:
      - prod
      - dev
      region:
      - us
      - eu
      team:
      - green
      - sales
    annotations:
      area: latency
      env: prod
      region: us
      team: sales
  spec:
    description: Example Google Cloud Monitoring SLO
    indicator:
      metricSource:
        name: google-cloud-monitoring
        project: default
        kind: Agent
    budgetingMethod: Occurrences
    objectives:
    - displayName: Good response (200)
      value: 1.0
      name: ok
      target: 0.95
      countMetrics:
        incremental: true
        good:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_count'
              | filter
                  (resource.service == 'monitoring.googleapis.com')
                  && (metric.response_code == '200')
              | align rate(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_count_aggregate: aggregate(value.request_count)]
            projectId: my-project-id
        total:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_count'
              | filter
                  (resource.service == 'monitoring.googleapis.com')
              | align rate(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_count_aggregate: aggregate(value.request_count)]
            projectId: my-project-id
      primary: true
    service: api-server
    timeWindows:
    - unit: Month
      count: 1
      isRolling: false
      calendar:
        startTime: "2022-12-01 00:00:00"
        timeZone: UTC
    alertPolicies:
    - fast-burn-5x-for-last-10m
    attachments:
    - url: https://docs.nobl9.com
      displayName: Nobl9 Documentation
    anomalyConfig:
      noData:
        alertMethods:
        - name: slack-notification
          project: default
        period: 1h
# Metric type: good over total
# Budgeting method: Occurrences
# Time window type: Rolling
- apiVersion: n9/v1alpha
  kind: SLO
  metadata:
    name: api-server-slo
    displayName: API Server SLO
    project: default
    labels:
      area:
      - latency
      - slow-check
      env:
      - prod
      - dev
      region:
      - us
      - eu
      team:
      - green
      - sales
    annotations:
      area: latency
      env: prod
      region: us
      team: sales
  spec:
    description: Example Google Cloud Monitoring SLO
    indicator:
      metricSource:
        name: google-cloud-monitoring
        project: default
        kind: Agent
    budgetingMethod: Occurrences
    objectives:
    - displayName: Good response (200)
      value: 1.0
      name: ok
      target: 0.95
      countMetrics:
        incremental: true
        good:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_count'
              | filter
                  (resource.service == 'monitoring.googleapis.com')
                  && (metric.response_code == '200')
              | align rate(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_count_aggregate: aggregate(value.request_count)]
            projectId: my-project-id
        total:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_count'
              | filter
                  (resource.service == 'monitoring.googleapis.com')
              | align rate(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_count_aggregate: aggregate(value.request_count)]
            projectId: my-project-id
      primary: true
    service: api-server
    timeWindows:
    - unit: Hour
      count: 1
      isRolling: true
    alertPolicies:
    - fast-burn-5x-for-last-10m
    attachments:
    - url: https://docs.nobl9.com
      displayName: Nobl9 Documentation
    anomalyConfig:
      noData:
        alertMethods:
        - name: slack-notification
          project: default
        period: 1h
# Metric type: good over total
# Budgeting method: Timeslices
# Time window type: Calendar
- apiVersion: n9/v1alpha
  kind: SLO
  metadata:
    name: api-server-slo
    displayName: API Server SLO
    project: default
    labels:
      area:
      - latency
      - slow-check
      env:
      - prod
      - dev
      region:
      - us
      - eu
      team:
      - green
      - sales
    annotations:
      area: latency
      env: prod
      region: us
      team: sales
  spec:
    description: Example Google Cloud Monitoring SLO
    indicator:
      metricSource:
        name: google-cloud-monitoring
        project: default
        kind: Agent
    budgetingMethod: Timeslices
    objectives:
    - displayName: Good response (200)
      value: 1.0
      name: ok
      target: 0.95
      timeSliceTarget: 0.9
      countMetrics:
        incremental: true
        good:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_count'
              | filter
                  (resource.service == 'monitoring.googleapis.com')
                  && (metric.response_code == '200')
              | align rate(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_count_aggregate: aggregate(value.request_count)]
            projectId: my-project-id
        total:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_count'
              | filter
                  (resource.service == 'monitoring.googleapis.com')
              | align rate(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_count_aggregate: aggregate(value.request_count)]
            projectId: my-project-id
      primary: true
    service: api-server
    timeWindows:
    - unit: Month
      count: 1
      isRolling: false
      calendar:
        startTime: "2022-12-01 00:00:00"
        timeZone: UTC
    alertPolicies:
    - fast-burn-5x-for-last-10m
    attachments:
    - url: https://docs.nobl9.com
      displayName: Nobl9 Documentation
    anomalyConfig:
      noData:
        alertMethods:
        - name: slack-notification
          project: default
        period: 1h
# Metric type: good over total
# Budgeting method: Timeslices
# Time window type: Rolling
- apiVersion: n9/v1alpha
  kind: SLO
  metadata:
    name: api-server-slo
    displayName: API Server SLO
    project: default
    labels:
      area:
      - latency
      - slow-check
      env:
      - prod
      - dev
      region:
      - us
      - eu
      team:
      - green
      - sales
    annotations:
      area: latency
      env: prod
      region: us
      team: sales
  spec:
    description: Example Google Cloud Monitoring SLO
    indicator:
      metricSource:
        name: google-cloud-monitoring
        project: default
        kind: Agent
    budgetingMethod: Timeslices
    objectives:
    - displayName: Good response (200)
      value: 1.0
      name: ok
      target: 0.95
      timeSliceTarget: 0.9
      countMetrics:
        incremental: true
        good:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_count'
              | filter
                  (resource.service == 'monitoring.googleapis.com')
                  && (metric.response_code == '200')
              | align rate(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_count_aggregate: aggregate(value.request_count)]
            projectId: my-project-id
        total:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_count'
              | filter
                  (resource.service == 'monitoring.googleapis.com')
              | align rate(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_count_aggregate: aggregate(value.request_count)]
            projectId: my-project-id
      primary: true
    service: api-server
    timeWindows:
    - unit: Hour
      count: 1
      isRolling: true
    alertPolicies:
    - fast-burn-5x-for-last-10m
    attachments:
    - url: https://docs.nobl9.com
      displayName: Nobl9 Documentation
    anomalyConfig:
      noData:
        alertMethods:
        - name: slack-notification
          project: default
        period: 1h
# Metric type: threshold
# Budgeting method: Occurrences
# Time window type: Calendar
- apiVersion: n9/v1alpha
  kind: SLO
  metadata:
    name: api-server-slo
    displayName: API Server SLO
    project: default
    labels:
      area:
      - latency
      - slow-check
      env:
      - prod
      - dev
      region:
      - us
      - eu
      team:
      - green
      - sales
    annotations:
      area: latency
      env: prod
      region: us
      team: sales
  spec:
    description: Example Google Cloud Monitoring SLO
    indicator:
      metricSource:
        name: google-cloud-monitoring
        project: default
        kind: Agent
    budgetingMethod: Occurrences
    objectives:
    - displayName: Good response (200)
      value: 200.0
      name: ok
      target: 0.95
      rawMetric:
        query:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_latencies'
              | filter (resource.service == 'monitoring.googleapis.com')
              | align delta(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_latencies_mean: mean(value.request_latencies)]
            projectId: my-project-id
      op: lte
      primary: true
    service: api-server
    timeWindows:
    - unit: Month
      count: 1
      isRolling: false
      calendar:
        startTime: "2022-12-01 00:00:00"
        timeZone: UTC
    alertPolicies:
    - fast-burn-5x-for-last-10m
    attachments:
    - url: https://docs.nobl9.com
      displayName: Nobl9 Documentation
    anomalyConfig:
      noData:
        alertMethods:
        - name: slack-notification
          project: default
        period: 1h
# Metric type: threshold
# Budgeting method: Occurrences
# Time window type: Rolling
- apiVersion: n9/v1alpha
  kind: SLO
  metadata:
    name: api-server-slo
    displayName: API Server SLO
    project: default
    labels:
      area:
      - latency
      - slow-check
      env:
      - prod
      - dev
      region:
      - us
      - eu
      team:
      - green
      - sales
    annotations:
      area: latency
      env: prod
      region: us
      team: sales
  spec:
    description: Example Google Cloud Monitoring SLO
    indicator:
      metricSource:
        name: google-cloud-monitoring
        project: default
        kind: Agent
    budgetingMethod: Occurrences
    objectives:
    - displayName: Good response (200)
      value: 200.0
      name: ok
      target: 0.95
      rawMetric:
        query:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_latencies'
              | filter (resource.service == 'monitoring.googleapis.com')
              | align delta(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_latencies_mean: mean(value.request_latencies)]
            projectId: my-project-id
      op: lte
      primary: true
    service: api-server
    timeWindows:
    - unit: Hour
      count: 1
      isRolling: true
    alertPolicies:
    - fast-burn-5x-for-last-10m
    attachments:
    - url: https://docs.nobl9.com
      displayName: Nobl9 Documentation
    anomalyConfig:
      noData:
        alertMethods:
        - name: slack-notification
          project: default
        period: 1h
# Metric type: threshold
# Budgeting method: Timeslices
# Time window type: Calendar
- apiVersion: n9/v1alpha
  kind: SLO
  metadata:
    name: api-server-slo
    displayName: API Server SLO
    project: default
    labels:
      area:
      - latency
      - slow-check
      env:
      - prod
      - dev
      region:
      - us
      - eu
      team:
      - green
      - sales
    annotations:
      area: latency
      env: prod
      region: us
      team: sales
  spec:
    description: Example Google Cloud Monitoring SLO
    indicator:
      metricSource:
        name: google-cloud-monitoring
        project: default
        kind: Agent
    budgetingMethod: Timeslices
    objectives:
    - displayName: Good response (200)
      value: 200.0
      name: ok
      target: 0.95
      timeSliceTarget: 0.9
      rawMetric:
        query:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_latencies'
              | filter (resource.service == 'monitoring.googleapis.com')
              | align delta(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_latencies_mean: mean(value.request_latencies)]
            projectId: my-project-id
      op: lte
      primary: true
    service: api-server
    timeWindows:
    - unit: Month
      count: 1
      isRolling: false
      calendar:
        startTime: "2022-12-01 00:00:00"
        timeZone: UTC
    alertPolicies:
    - fast-burn-5x-for-last-10m
    attachments:
    - url: https://docs.nobl9.com
      displayName: Nobl9 Documentation
    anomalyConfig:
      noData:
        alertMethods:
        - name: slack-notification
          project: default
        period: 1h
# Metric type: threshold
# Budgeting method: Timeslices
# Time window type: Rolling
- apiVersion: n9/v1alpha
  kind: SLO
  metadata:
    name: api-server-slo
    displayName: API Server SLO
    project: default
    labels:
      area:
      - latency
      - slow-check
      env:
      - prod
      - dev
      region:
      - us
      - eu
      team:
      - green
      - sales
    annotations:
      area: latency
      env: prod
      region: us
      team: sales
  spec:
    description: Example Google Cloud Monitoring SLO
    indicator:
      metricSource:
        name: google-cloud-monitoring
        project: default
        kind: Agent
    budgetingMethod: Timeslices
    objectives:
    - displayName: Good response (200)
      value: 200.0
      name: ok
      target: 0.95
      timeSliceTarget: 0.9
      rawMetric:
        query:
          gcm:
            query: |-
              fetch api-server
              | metric 'serviceruntime.googleapis.com/api/request_latencies'
              | filter (resource.service == 'monitoring.googleapis.com')
              | align delta(1m)
              | every 1m
              | group_by [resource.service],
                  [value_request_latencies_mean: mean(value.request_latencies)]
            projectId: my-project-id
      op: lte
      primary: true
    service: api-server
    timeWindows:
    - unit: Hour
      count: 1
      isRolling: true
    alertPolicies:
    - fast-burn-5x-for-last-10m
    attachments:
    - url: https://docs.nobl9.com
      displayName: Nobl9 Documentation
    anomalyConfig:
      noData:
        alertMethods:
        - name: slack-notification
          project: default
        period: 1h
