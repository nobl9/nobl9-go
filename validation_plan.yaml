- kind: Project
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.annotations
    type: string
    examples:
    - |-
      team: sales
      env: prod
      region: us
      area: latency
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^\\p{Ll}([_\\-0-9\\p{Ll}]*[0-9\\p{Ll}])?$'"
      errorCode: string_match_regexp
    - description: length must be less than or equal to 1050
      errorCode: string_max_length
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.labels
    type: string
    examples:
    - |-
      team:
        - green
        - sales
      env:
        - prod
        - dev
      region:
        - us
        - eu
      area:
        - latency
        - slow-check
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^\\p{Ll}([_\\-0-9\\p{Ll}]*[0-9\\p{Ll}])?$'"
      errorCode: string_match_regexp
    - description: elements must be unique
      errorCode: slice_unique
    - description: length must be less than or equal to 200
      errorCode: string_max_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_description
- kind: Service
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.annotations
    type: string
    examples:
    - |-
      team: sales
      env: prod
      region: us
      area: latency
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^\\p{Ll}([_\\-0-9\\p{Ll}]*[0-9\\p{Ll}])?$'"
      errorCode: string_match_regexp
    - description: length must be less than or equal to 1050
      errorCode: string_max_length
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.labels
    type: string
    examples:
    - |-
      team:
        - green
        - sales
      env:
        - prod
        - dev
      region:
        - us
        - eu
      area:
        - latency
        - slow-check
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^\\p{Ll}([_\\-0-9\\p{Ll}]*[0-9\\p{Ll}])?$'"
      errorCode: string_match_regexp
    - description: elements must be unique
      errorCode: slice_unique
    - description: length must be less than or equal to 200
      errorCode: string_max_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_description
- kind: SLO
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $
    type: SLO
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: forbidden
      conditions:
      - at least one composite objective is defined
    - description: TODO
      errorCode: forbidden
      conditions:
      - at least one composite objective is defined
  - doc: TODO
    path: $.metadata.annotations
    type: string
    examples:
    - |-
      team: sales
      env: prod
      region: us
      area: latency
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^\\p{Ll}([_\\-0-9\\p{Ll}]*[0-9\\p{Ll}])?$'"
      errorCode: string_match_regexp
    - description: length must be less than or equal to 1050
      errorCode: string_max_length
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.labels
    type: string
    examples:
    - |-
      team:
        - green
        - sales
      env:
        - prod
        - dev
      region:
        - us
        - eu
      area:
        - latency
        - slow-check
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^\\p{Ll}([_\\-0-9\\p{Ll}]*[0-9\\p{Ll}])?$'"
      errorCode: string_match_regexp
    - description: elements must be unique
      errorCode: slice_unique
    - description: length must be less than or equal to 200
      errorCode: string_max_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec
    type: Spec
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: exactly_one_metric_type
    - description: TODO
      errorCode: exactly_one_metric_spec_type
    - description: TODO
    - description: TODO
      errorCode: time_slice_target
  - doc: TODO
    path: $.spec.alertPolicies[*]
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.anomalyConfig.noData.alertMethods
    type: "[]slo.AnomalyConfigAlertMethod"
    rules:
    - description: length must be greater than or equal to 1
      errorCode: slice_min_length
    - description: elements must be unique
      errorCode: slice_unique
  - doc: TODO
    path: $.spec.anomalyConfig.noData.alertMethods[*].name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.anomalyConfig.noData.alertMethods[*].project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.attachments
    type: "[]slo.Attachment"
    rules:
    - description: length must be between 0 and 20
      errorCode: slice_length
  - doc: TODO
    path: $.spec.attachments[*].displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.spec.attachments[*].url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.budgetingMethod
    type: string
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.composite
    type: Composite
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      details: composite section is forbidden when spec.objectives[0].composite is provided
      errorCode: forbidden
      conditions:
      - at least one composite objective is defined
    - description: TODO
      conditions:
      - ""
  - doc: TODO
    path: $.spec.composite.burnRateCondition.op
    type: string
    rules:
    - description: should be equal to 'gt'
      errorCode: equal_to
  - doc: TODO
    path: $.spec.composite.burnRateCondition.value
    type: float64
    rules:
    - description: should be greater than or equal to '0'
      errorCode: greater_than_or_equal_to
    - description: should be less than or equal to '1000'
      errorCode: less_than_or_equal_to
  - doc: TODO
    path: $.spec.composite.target
    type: float64
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
    - description: should be less than '1'
      errorCode: less_than
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_description
  - doc: TODO
    path: $.spec.indicator
    type: Indicator
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      details: indicator section is forbidden when spec.objectives[0].composite is provided
      errorCode: forbidden
      conditions:
      - at least one composite objective is defined
  - doc: TODO
    path: $.spec.indicator.metricSource.kind
    type: Kind
    package: github.com/nobl9/nobl9-go/manifest
    rules:
    - description: "must be one of: Agent, Direct"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.metricSource.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.metricSource.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.amazonPrometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.appDynamics.applicationName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.appDynamics.metricPath
    type: string
    rules:
    - description: TODO
      errorCode: app_dynamics_wildcard_not_supported
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.aggregation
    type: string
    rules:
    - description: "must be one of: Avg, Min, Max, Count, Sum"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.dataType
    type: string
    rules:
    - description: "must be one of: metrics, logs"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.dimensions
    type: "[]slo.AzureMonitorMetricDimension"
    rules:
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.kqlQuery
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '(?m)\\bn9_time\\b'"
      details: n9_time is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.metricName
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.metricNamespace
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.resourceId
    type: string
    rules:
    - description: "string must match regular expression: '^/subscriptions/[a-zA-Z0-9-]+/resourceGroups/[a-zA-Z0-9-._()]+/providers/[a-zA-Z0-9-.()_]+/[a-zA-Z0-9-_()]+/[a-zA-Z0-9-_()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.workspace
    type: AzureMonitorMetricLogAnalyticsWorkspace
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.workspace.resourceGroup
    type: string
    rules:
    - description: "string must match regular expression: '^[a-zA-Z0-9-._()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.workspace.subscriptionId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.azureMonitor.workspace.workspaceId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.bigQuery.projectId
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.bigQuery.query
    type: string
    rules:
    - description: "string must match regular expression: '\\bn9date\\b'"
      details: must contain 'n9date'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\bn9value\\b'"
      details: must contain 'n9value'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_from\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_from'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_to\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_to'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch
    type: CloudWatchMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.accountId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^\\d{12}$' (e.g. '123456789012')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.dimensions
    type: "[]slo.CloudWatchMetricDimension"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.json
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - json is provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.metricName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.namespace
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[0-9A-Za-z.\\-_/#:]{1,255}$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
    - description: "must be one of: us-east-2, us-east-1, us-west-1, us-west-2, af-south-1, ap-east-1, ap-south-1, ap-northeast-3, ap-northeast-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, ca-central-1, cn-north-1, cn-northwest-1, eu-central-1, eu-west-1, eu-west-2, eu-south-1, eu-west-3, eu-north-1, me-south-1, sa-east-1"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.sql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - sql is provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.cloudWatch.stat
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^((SampleCount)|(Sum)|(Average)|(Minimum)|(Maximum)|(IQM)|((((p)|(tm)|(wm)|(tc)|(ts)))((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?))|((((TM)|(WM)|(TC)|(TS)))\\(((((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|(((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):)|(:((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\))|((((PR)))\\((((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\)))$' (e.g. 'SampleCount', 'Sum', 'Average', 'Minimum', 'Maximum', 'IQM', 'p10', 'p99', 'tm98', 'wm99', 'tc10', 'ts30', 'TM(10%:98%)', 'WM(10%:15%)', 'TC(10%:20%)', 'TS(10%:90%)')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.indicator.rawMetric.datadog.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.dynatrace.metricSelector
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.elasticsearch.index
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.elasticsearch.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: '{{.BeginTime}}', '{{.EndTime}}'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.generic.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.grafanaLoki.logql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.graphite.metricPath
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\*'"
      details: wildcards are not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\[[^.]*\\]' (e.g. '[a-z0-9]')"
      details: character list or range is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '{[^.]*}' (e.g. '{user,system,iowait}')"
      details: value list is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.honeycomb.attribute
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
  - doc: TODO
    path: $.spec.indicator.rawMetric.honeycomb.calculation
    type: string
    rules:
    - description: "must be one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.influxdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*bucket\\s*:\\s*\".+\"\\s*'"
      details: must contain a bucket name
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*range\\s*\\(\\s*start\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_start\\s*\\)\\s*,\\s*stop\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_stop\\s*\\)\\s*\\)'"
      details: must contain both 'params.n9time_start' and 'params.n9time_stop'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.lightstep.percentile
    type: float64
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: should be less than or equal to '99.99'
      errorCode: less_than_or_equal_to
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.indicator.rawMetric.lightstep.streamId
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
  - doc: TODO
    path: $.spec.indicator.rawMetric.lightstep.uql
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: "string must not match regular expression: '((constant|spans_sample|assemble)\\s+[a-z\\d.])'"
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.indicator.rawMetric.newRelic.nrql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '(?i)[\\n\\s](since|until)([\\n\\s]|$)'"
      details: query must not contain 'since' or 'until' keywords (case insensitive)
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.opentsdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.pingdom.checkId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^(?:|\\d+)$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.pingdom.status
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'uptime'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'transaction'
  - doc: TODO
    path: $.spec.indicator.rawMetric.prometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.redshift.query
    type: string
    rules:
    - description: "string must match regular expression: '^SELECT[\\s\\S]*\\bn9date\\b[\\s\\S]*FROM'"
      details: must contain 'n9date' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^SELECT\\s[\\s\\S]*\\bn9value\\b[\\s\\S]*\\sFROM'"
      details: must contain 'n9value' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_from\\b[\\s\\S]*'"
      details: must filter by ':n9date_from' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_to\\b[\\s\\S]*'"
      details: must filter by ':n9date_to' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.redshift.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.splunk.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: 'n9time', 'n9value'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '(\\bindex\\s*=.+)|(\"\\bindex\"\\s*=.+)' (e.g. 'index=svc-events', '\"index\"=svc-events')"
      details: query has to contain index=<NAME> or "index"=<NAME>
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.splunkObservability.program
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.indicator.rawMetric.sumoLogic.quantization
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.sumoLogic.query
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bby\\b'"
      details: aggregation function is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.sumoLogic.rollup
    type: string
    rules:
    - description: "must be one of: Avg, Sum, Min, Max, Count, None"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.indicator.rawMetric.sumoLogic.type
    type: string
    rules:
    - description: "must be one of: logs, metrics"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives
    type: "[]slo.Objective"
    rules:
    - description: length must be between 1 and 1
      errorCode: slice_length
      conditions:
      - at least one composite objective is defined
    - description: length must be greater than or equal to 1
      errorCode: slice_min_length
      conditions:
      - none of the objectives is of composite type
    - description: "elements must be unique according to the following constraints: objectives[*].value must be different for each objective"
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
    - description: TODO
  - doc: TODO
    path: $.spec.objectives[*].composite.components.objectives[*].objective
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
      conditions:
      - at least one composite objective is defined
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
      conditions:
      - at least one composite objective is defined
  - doc: TODO
    path: $.spec.objectives[*].composite.components.objectives[*].project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
      conditions:
      - at least one composite objective is defined
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
      conditions:
      - at least one composite objective is defined
  - doc: TODO
    path: $.spec.objectives[*].composite.components.objectives[*].slo
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
      conditions:
      - at least one composite objective is defined
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
      conditions:
      - at least one composite objective is defined
  - doc: TODO
    path: $.spec.objectives[*].composite.components.objectives[*].weight
    type: float64
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
      conditions:
      - at least one composite objective is defined
  - doc: TODO
    path: $.spec.objectives[*].composite.components.objectives[*].whenDelayed
    type: WhenDelayed
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: "must be one of: CountAsGood, CountAsBad, Ignore"
      errorCode: one_of
      conditions:
      - at least one composite objective is defined
  - doc: TODO
    path: $.spec.objectives[*].composite.maxDelay
    type: string
    rules:
    - description: duration must be defined with 1m0s precision
      errorCode: duration_precision
      conditions:
      - at least one composite objective is defined
      - ""
    - description: should be greater than or equal to '1m0s'
      errorCode: greater_than_or_equal_to
      conditions:
      - at least one composite objective is defined
      - ""
  - doc: TODO
    path: $.spec.objectives[*].countMetrics
    type: CountMetricsSpec
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: not_equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is azureMonitor
    - description: TODO
      errorCode: not_equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetric is appDynamics
    - description: TODO
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is lightstep
    - description: TODO
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is pingdom
    - description: TODO
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is pingdom
    - description: TODO
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is sumoLogic
    - description: TODO
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is sumoLogic
    - description: TODO
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is instana
    - description: TODO
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is redshift
    - description: TODO
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is bigQuery
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad
    type: MetricSpec
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: bad_over_total_disabled
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.amazonPrometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.appDynamics.applicationName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.appDynamics.metricPath
    type: string
    rules:
    - description: TODO
      errorCode: app_dynamics_wildcard_not_supported
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.aggregation
    type: string
    rules:
    - description: "must be one of: Avg, Min, Max, Count, Sum"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.dataType
    type: string
    rules:
    - description: "must be one of: metrics, logs"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.dimensions
    type: "[]slo.AzureMonitorMetricDimension"
    rules:
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.kqlQuery
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '(?m)\\bn9_time\\b'"
      details: n9_time is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.metricName
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.metricNamespace
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.resourceId
    type: string
    rules:
    - description: "string must match regular expression: '^/subscriptions/[a-zA-Z0-9-]+/resourceGroups/[a-zA-Z0-9-._()]+/providers/[a-zA-Z0-9-.()_]+/[a-zA-Z0-9-_()]+/[a-zA-Z0-9-_()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.workspace
    type: AzureMonitorMetricLogAnalyticsWorkspace
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.workspace.resourceGroup
    type: string
    rules:
    - description: "string must match regular expression: '^[a-zA-Z0-9-._()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.workspace.subscriptionId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.azureMonitor.workspace.workspaceId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.bigQuery.projectId
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.bigQuery.query
    type: string
    rules:
    - description: "string must match regular expression: '\\bn9date\\b'"
      details: must contain 'n9date'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\bn9value\\b'"
      details: must contain 'n9value'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_from\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_from'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_to\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_to'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch
    type: CloudWatchMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.accountId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^\\d{12}$' (e.g. '123456789012')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.dimensions
    type: "[]slo.CloudWatchMetricDimension"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.json
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - json is provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.metricName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.namespace
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[0-9A-Za-z.\\-_/#:]{1,255}$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
    - description: "must be one of: us-east-2, us-east-1, us-west-1, us-west-2, af-south-1, ap-east-1, ap-south-1, ap-northeast-3, ap-northeast-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, ca-central-1, cn-north-1, cn-northwest-1, eu-central-1, eu-west-1, eu-west-2, eu-south-1, eu-west-3, eu-north-1, me-south-1, sa-east-1"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.sql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - sql is provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.cloudWatch.stat
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^((SampleCount)|(Sum)|(Average)|(Minimum)|(Maximum)|(IQM)|((((p)|(tm)|(wm)|(tc)|(ts)))((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?))|((((TM)|(WM)|(TC)|(TS)))\\(((((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|(((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):)|(:((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\))|((((PR)))\\((((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\)))$' (e.g. 'SampleCount', 'Sum', 'Average', 'Minimum', 'Maximum', 'IQM', 'p10', 'p99', 'tm98', 'wm99', 'tc10', 'ts30', 'TM(10%:98%)', 'WM(10%:15%)', 'TC(10%:20%)', 'TS(10%:90%)')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.datadog.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.dynatrace.metricSelector
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.elasticsearch.index
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.elasticsearch.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: '{{.BeginTime}}', '{{.EndTime}}'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.generic.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.grafanaLoki.logql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.graphite.metricPath
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\*'"
      details: wildcards are not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\[[^.]*\\]' (e.g. '[a-z0-9]')"
      details: character list or range is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '{[^.]*}' (e.g. '{user,system,iowait}')"
      details: value list is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.honeycomb.attribute
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.honeycomb.calculation
    type: string
    rules:
    - description: "must be one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.influxdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*bucket\\s*:\\s*\".+\"\\s*'"
      details: must contain a bucket name
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*range\\s*\\(\\s*start\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_start\\s*\\)\\s*,\\s*stop\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_stop\\s*\\)\\s*\\)'"
      details: must contain both 'params.n9time_start' and 'params.n9time_stop'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.instana
    type: InstanaMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.instana.application
    type: InstanaApplicationMetricType
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.instana.infrastructure
    type: InstanaInfrastructureMetricType
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.instana.infrastructure.metricRetrievalMethod
    type: string
    rules:
    - description: "must be one of: query, snapshot"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.instana.metricType
    type: string
    rules:
    - description: should be equal to 'infrastructure'
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.lightstep.percentile
    type: float64
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: should be less than or equal to '99.99'
      errorCode: less_than_or_equal_to
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.lightstep.streamId
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.lightstep.uql
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: "string must not match regular expression: '((constant|spans_sample|assemble)\\s+[a-z\\d.])'"
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.newRelic.nrql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '(?i)[\\n\\s](since|until)([\\n\\s]|$)'"
      details: query must not contain 'since' or 'until' keywords (case insensitive)
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.opentsdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.pingdom.checkId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^(?:|\\d+)$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.pingdom.checkType
    type: string
    rules:
    - description: "must be one of: uptime, transaction"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.pingdom.status
    type: string
    rules:
    - description: property is required but was empty
      errorCode: required
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'uptime'
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'uptime'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'transaction'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.prometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.redshift.query
    type: string
    rules:
    - description: "string must match regular expression: '^SELECT[\\s\\S]*\\bn9date\\b[\\s\\S]*FROM'"
      details: must contain 'n9date' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^SELECT\\s[\\s\\S]*\\bn9value\\b[\\s\\S]*\\sFROM'"
      details: must contain 'n9value' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_from\\b[\\s\\S]*'"
      details: must filter by ':n9date_from' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_to\\b[\\s\\S]*'"
      details: must filter by ':n9date_to' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.redshift.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.splunk.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: 'n9time', 'n9value'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '(\\bindex\\s*=.+)|(\"\\bindex\"\\s*=.+)' (e.g. 'index=svc-events', '\"index\"=svc-events')"
      details: query has to contain index=<NAME> or "index"=<NAME>
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.splunkObservability.program
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.sumoLogic.quantization
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.sumoLogic.query
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bby\\b'"
      details: aggregation function is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.sumoLogic.rollup
    type: string
    rules:
    - description: "must be one of: Avg, Sum, Min, Max, Count, None"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.sumoLogic.type
    type: string
    rules:
    - description: "must be one of: logs, metrics"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.bad.thousandEyes
    type: ThousandEyesMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.amazonPrometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.appDynamics.applicationName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.appDynamics.metricPath
    type: string
    rules:
    - description: TODO
      errorCode: app_dynamics_wildcard_not_supported
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.aggregation
    type: string
    rules:
    - description: "must be one of: Avg, Min, Max, Count, Sum"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.dataType
    type: string
    rules:
    - description: "must be one of: metrics, logs"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.dimensions
    type: "[]slo.AzureMonitorMetricDimension"
    rules:
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.kqlQuery
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '(?m)\\bn9_time\\b'"
      details: n9_time is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.metricName
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.metricNamespace
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.resourceId
    type: string
    rules:
    - description: "string must match regular expression: '^/subscriptions/[a-zA-Z0-9-]+/resourceGroups/[a-zA-Z0-9-._()]+/providers/[a-zA-Z0-9-.()_]+/[a-zA-Z0-9-_()]+/[a-zA-Z0-9-_()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.workspace
    type: AzureMonitorMetricLogAnalyticsWorkspace
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.workspace.resourceGroup
    type: string
    rules:
    - description: "string must match regular expression: '^[a-zA-Z0-9-._()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.workspace.subscriptionId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.azureMonitor.workspace.workspaceId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.bigQuery.projectId
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.bigQuery.query
    type: string
    rules:
    - description: "string must match regular expression: '\\bn9date\\b'"
      details: must contain 'n9date'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\bn9value\\b'"
      details: must contain 'n9value'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_from\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_from'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_to\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_to'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch
    type: CloudWatchMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.accountId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^\\d{12}$' (e.g. '123456789012')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.dimensions
    type: "[]slo.CloudWatchMetricDimension"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.json
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - json is provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.metricName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.namespace
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[0-9A-Za-z.\\-_/#:]{1,255}$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
    - description: "must be one of: us-east-2, us-east-1, us-west-1, us-west-2, af-south-1, ap-east-1, ap-south-1, ap-northeast-3, ap-northeast-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, ca-central-1, cn-north-1, cn-northwest-1, eu-central-1, eu-west-1, eu-west-2, eu-south-1, eu-west-3, eu-north-1, me-south-1, sa-east-1"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.sql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - sql is provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.cloudWatch.stat
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^((SampleCount)|(Sum)|(Average)|(Minimum)|(Maximum)|(IQM)|((((p)|(tm)|(wm)|(tc)|(ts)))((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?))|((((TM)|(WM)|(TC)|(TS)))\\(((((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|(((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):)|(:((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\))|((((PR)))\\((((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\)))$' (e.g. 'SampleCount', 'Sum', 'Average', 'Minimum', 'Maximum', 'IQM', 'p10', 'p99', 'tm98', 'wm99', 'tc10', 'ts30', 'TM(10%:98%)', 'WM(10%:15%)', 'TC(10%:20%)', 'TS(10%:90%)')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.datadog.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.dynatrace.metricSelector
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.elasticsearch.index
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.elasticsearch.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: '{{.BeginTime}}', '{{.EndTime}}'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.generic.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.grafanaLoki.logql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.graphite.metricPath
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\*'"
      details: wildcards are not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\[[^.]*\\]' (e.g. '[a-z0-9]')"
      details: character list or range is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '{[^.]*}' (e.g. '{user,system,iowait}')"
      details: value list is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.honeycomb.attribute
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.honeycomb.calculation
    type: string
    rules:
    - description: "must be one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.influxdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*bucket\\s*:\\s*\".+\"\\s*'"
      details: must contain a bucket name
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*range\\s*\\(\\s*start\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_start\\s*\\)\\s*,\\s*stop\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_stop\\s*\\)\\s*\\)'"
      details: must contain both 'params.n9time_start' and 'params.n9time_stop'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.instana
    type: InstanaMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.instana.application
    type: InstanaApplicationMetricType
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.instana.infrastructure
    type: InstanaInfrastructureMetricType
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.instana.infrastructure.metricRetrievalMethod
    type: string
    rules:
    - description: "must be one of: query, snapshot"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.instana.metricType
    type: string
    rules:
    - description: should be equal to 'infrastructure'
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.lightstep.percentile
    type: float64
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: should be less than or equal to '99.99'
      errorCode: less_than_or_equal_to
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.lightstep.streamId
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.lightstep.typeOfData
    type: string
    rules:
    - description: "must be one of: good, metric"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.lightstep.uql
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: "string must not match regular expression: '((constant|spans_sample|assemble)\\s+[a-z\\d.])'"
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.newRelic.nrql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '(?i)[\\n\\s](since|until)([\\n\\s]|$)'"
      details: query must not contain 'since' or 'until' keywords (case insensitive)
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.opentsdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.pingdom.checkId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^(?:|\\d+)$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.pingdom.checkType
    type: string
    rules:
    - description: "must be one of: uptime, transaction"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.pingdom.status
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'uptime'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'transaction'
    - description: property is required but was empty
      errorCode: required
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'uptime'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.prometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.redshift.query
    type: string
    rules:
    - description: "string must match regular expression: '^SELECT[\\s\\S]*\\bn9date\\b[\\s\\S]*FROM'"
      details: must contain 'n9date' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^SELECT\\s[\\s\\S]*\\bn9value\\b[\\s\\S]*\\sFROM'"
      details: must contain 'n9value' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_from\\b[\\s\\S]*'"
      details: must filter by ':n9date_from' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_to\\b[\\s\\S]*'"
      details: must filter by ':n9date_to' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.redshift.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.splunk.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: 'n9time', 'n9value'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '(\\bindex\\s*=.+)|(\"\\bindex\"\\s*=.+)' (e.g. 'index=svc-events', '\"index\"=svc-events')"
      details: query has to contain index=<NAME> or "index"=<NAME>
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.splunkObservability.program
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.sumoLogic.quantization
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.sumoLogic.query
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bby\\b'"
      details: aggregation function is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.sumoLogic.rollup
    type: string
    rules:
    - description: "must be one of: Avg, Sum, Min, Max, Count, None"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.sumoLogic.type
    type: string
    rules:
    - description: "must be one of: logs, metrics"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.good.thousandEyes
    type: ThousandEyesMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.incremental
    type: bool
    rules:
    - description: should be equal to 'false'
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
      - countMetrics is lightstep
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.amazonPrometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.appDynamics.applicationName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.appDynamics.metricPath
    type: string
    rules:
    - description: TODO
      errorCode: app_dynamics_wildcard_not_supported
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.aggregation
    type: string
    rules:
    - description: "must be one of: Avg, Min, Max, Count, Sum"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.dataType
    type: string
    rules:
    - description: "must be one of: metrics, logs"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.dimensions
    type: "[]slo.AzureMonitorMetricDimension"
    rules:
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.kqlQuery
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '(?m)\\bn9_time\\b'"
      details: n9_time is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.metricName
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.metricNamespace
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.resourceId
    type: string
    rules:
    - description: "string must match regular expression: '^/subscriptions/[a-zA-Z0-9-]+/resourceGroups/[a-zA-Z0-9-._()]+/providers/[a-zA-Z0-9-.()_]+/[a-zA-Z0-9-_()]+/[a-zA-Z0-9-_()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.workspace
    type: AzureMonitorMetricLogAnalyticsWorkspace
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.workspace.resourceGroup
    type: string
    rules:
    - description: "string must match regular expression: '^[a-zA-Z0-9-._()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.workspace.subscriptionId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.azureMonitor.workspace.workspaceId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.bigQuery.projectId
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.bigQuery.query
    type: string
    rules:
    - description: "string must match regular expression: '\\bn9date\\b'"
      details: must contain 'n9date'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\bn9value\\b'"
      details: must contain 'n9value'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_from\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_from'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_to\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_to'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch
    type: CloudWatchMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.accountId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^\\d{12}$' (e.g. '123456789012')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.dimensions
    type: "[]slo.CloudWatchMetricDimension"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.json
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - json is provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.metricName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.namespace
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[0-9A-Za-z.\\-_/#:]{1,255}$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
    - description: "must be one of: us-east-2, us-east-1, us-west-1, us-west-2, af-south-1, ap-east-1, ap-south-1, ap-northeast-3, ap-northeast-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, ca-central-1, cn-north-1, cn-northwest-1, eu-central-1, eu-west-1, eu-west-2, eu-south-1, eu-west-3, eu-north-1, me-south-1, sa-east-1"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.sql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - sql is provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.cloudWatch.stat
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^((SampleCount)|(Sum)|(Average)|(Minimum)|(Maximum)|(IQM)|((((p)|(tm)|(wm)|(tc)|(ts)))((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?))|((((TM)|(WM)|(TC)|(TS)))\\(((((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|(((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):)|(:((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\))|((((PR)))\\((((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\)))$' (e.g. 'SampleCount', 'Sum', 'Average', 'Minimum', 'Maximum', 'IQM', 'p10', 'p99', 'tm98', 'wm99', 'tc10', 'ts30', 'TM(10%:98%)', 'WM(10%:15%)', 'TC(10%:20%)', 'TS(10%:90%)')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.datadog.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.dynatrace.metricSelector
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.elasticsearch.index
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.elasticsearch.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: '{{.BeginTime}}', '{{.EndTime}}'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.generic.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.grafanaLoki.logql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.graphite.metricPath
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\*'"
      details: wildcards are not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\[[^.]*\\]' (e.g. '[a-z0-9]')"
      details: character list or range is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '{[^.]*}' (e.g. '{user,system,iowait}')"
      details: value list is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.honeycomb.attribute
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.honeycomb.calculation
    type: string
    rules:
    - description: "must be one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.influxdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*bucket\\s*:\\s*\".+\"\\s*'"
      details: must contain a bucket name
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*range\\s*\\(\\s*start\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_start\\s*\\)\\s*,\\s*stop\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_stop\\s*\\)\\s*\\)'"
      details: must contain both 'params.n9time_start' and 'params.n9time_stop'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.instana
    type: InstanaMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.instana.application
    type: InstanaApplicationMetricType
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.instana.infrastructure
    type: InstanaInfrastructureMetricType
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.instana.infrastructure.metricRetrievalMethod
    type: string
    rules:
    - description: "must be one of: query, snapshot"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.instana.metricType
    type: string
    rules:
    - description: should be equal to 'infrastructure'
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.lightstep.percentile
    type: float64
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: should be less than or equal to '99.99'
      errorCode: less_than_or_equal_to
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.lightstep.streamId
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.lightstep.typeOfData
    type: string
    rules:
    - description: "must be one of: total, metric"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.lightstep.uql
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: "string must not match regular expression: '((constant|spans_sample|assemble)\\s+[a-z\\d.])'"
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.newRelic.nrql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '(?i)[\\n\\s](since|until)([\\n\\s]|$)'"
      details: query must not contain 'since' or 'until' keywords (case insensitive)
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.opentsdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.pingdom.checkId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^(?:|\\d+)$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.pingdom.checkType
    type: string
    rules:
    - description: "must be one of: uptime, transaction"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.pingdom.status
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'uptime'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'transaction'
    - description: property is required but was empty
      errorCode: required
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'uptime'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.prometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.redshift.query
    type: string
    rules:
    - description: "string must match regular expression: '^SELECT[\\s\\S]*\\bn9date\\b[\\s\\S]*FROM'"
      details: must contain 'n9date' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^SELECT\\s[\\s\\S]*\\bn9value\\b[\\s\\S]*\\sFROM'"
      details: must contain 'n9value' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_from\\b[\\s\\S]*'"
      details: must filter by ':n9date_from' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_to\\b[\\s\\S]*'"
      details: must filter by ':n9date_to' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.redshift.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.splunk.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: 'n9time', 'n9value'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '(\\bindex\\s*=.+)|(\"\\bindex\"\\s*=.+)' (e.g. 'index=svc-events', '\"index\"=svc-events')"
      details: query has to contain index=<NAME> or "index"=<NAME>
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.splunkObservability.program
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.sumoLogic.quantization
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.sumoLogic.query
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bby\\b'"
      details: aggregation function is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.sumoLogic.rollup
    type: string
    rules:
    - description: "must be one of: Avg, Sum, Min, Max, Count, None"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.sumoLogic.type
    type: string
    rules:
    - description: "must be one of: logs, metrics"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].countMetrics.total.thousandEyes
    type: ThousandEyesMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].displayName
    type: string
    rules:
    - description: length must be less than or equal to 63
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].op
    type: string
    rules:
    - description: "must be one of: lte, lt, gte, gt"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - rawMetric is defined
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.amazonPrometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.appDynamics.applicationName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.appDynamics.metricPath
    type: string
    rules:
    - description: TODO
      errorCode: app_dynamics_wildcard_not_supported
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.aggregation
    type: string
    rules:
    - description: "must be one of: Avg, Min, Max, Count, Sum"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.dataType
    type: string
    rules:
    - description: "must be one of: metrics, logs"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.dimensions
    type: "[]slo.AzureMonitorMetricDimension"
    rules:
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.kqlQuery
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: "string must match regular expression: '(?m)\\bn9_time\\b'"
      details: n9_time is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.metricName
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.metricNamespace
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.resourceId
    type: string
    rules:
    - description: "string must match regular expression: '^/subscriptions/[a-zA-Z0-9-]+/resourceGroups/[a-zA-Z0-9-._()]+/providers/[a-zA-Z0-9-.()_]+/[a-zA-Z0-9-_()]+/[a-zA-Z0-9-_()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.workspace
    type: AzureMonitorMetricLogAnalyticsWorkspace
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - dataType is 'metrics'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.workspace.resourceGroup
    type: string
    rules:
    - description: "string must match regular expression: '^[a-zA-Z0-9-._()]+$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.workspace.subscriptionId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.azureMonitor.workspace.workspaceId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
      conditions:
      - none of the objectives is of composite type
      - dataType is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.bigQuery.projectId
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.bigQuery.query
    type: string
    rules:
    - description: "string must match regular expression: '\\bn9date\\b'"
      details: must contain 'n9date'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\bn9value\\b'"
      details: must contain 'n9value'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_from\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_from'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'DATETIME\\(\\s*@n9date_to\\s*\\)'"
      details: must have DATETIME placeholder with '@n9date_to'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch
    type: CloudWatchMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.accountId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^\\d{12}$' (e.g. '123456789012')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.dimensions
    type: "[]slo.CloudWatchMetricDimension"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: elements must be unique
      details: dimension 'name' must be unique for all dimensions
      errorCode: slice_unique
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.dimensions[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.dimensions[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[\x00-\x7f]*$'"
      errorCode: string_ascii
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.json
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - json is provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.metricName
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.namespace
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^[0-9A-Za-z.\\-_/#:]{1,255}$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
    - description: "must be one of: us-east-2, us-east-1, us-west-1, us-west-2, af-south-1, ap-east-1, ap-south-1, ap-northeast-3, ap-northeast-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, ca-central-1, cn-north-1, cn-northwest-1, eu-central-1, eu-west-1, eu-west-2, eu-south-1, eu-west-3, eu-north-1, me-south-1, sa-east-1"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.sql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - sql is provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.cloudWatch.stat
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
    - description: "string must match regular expression: '^((SampleCount)|(Sum)|(Average)|(Minimum)|(Maximum)|(IQM)|((((p)|(tm)|(wm)|(tc)|(ts)))((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?))|((((TM)|(WM)|(TC)|(TS)))\\(((((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|(((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%):)|(:((100|(([1-9]\\d?)|0))(\\.\\d{1,10})?%))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\))|((((PR)))\\((((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?))|((-?(([1-9]\\d*)|0)(\\.\\d{1,10})?):)|(:(-?(([1-9]\\d*)|0)(\\.\\d{1,10})?)))\\)))$' (e.g. 'SampleCount', 'Sum', 'Average', 'Minimum', 'Maximum', 'IQM', 'p10', 'p99', 'tm98', 'wm99', 'tc10', 'ts30', 'TM(10%:98%)', 'WM(10%:15%)', 'TC(10%:20%)', 'TS(10%:90%)')"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - either stat, dimensions, metricName or namespace are provided
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.datadog.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.dynatrace.metricSelector
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.elasticsearch.index
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.elasticsearch.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: '{{.BeginTime}}', '{{.EndTime}}'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.generic.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.grafanaLoki.logql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.graphite.metricPath
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\*'"
      details: wildcards are not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '\\[[^.]*\\]' (e.g. '[a-z0-9]')"
      details: character list or range is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '{[^.]*}' (e.g. '{user,system,iowait}')"
      details: value list is not allowed
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.honeycomb.attribute
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
      - "calculation is one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.honeycomb.calculation
    type: string
    rules:
    - description: "must be one of: CONCURRENCY, COUNT, SUM, AVG, COUNT_DISTINCT, MAX, MIN, P001, P01, P05, P10, P25, P50, P75, P90, P95, P99, P999, RATE_AVG, RATE_SUM, RATE_MAX"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.influxdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*bucket\\s*:\\s*\".+\"\\s*'"
      details: must contain a bucket name
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '\\s*range\\s*\\(\\s*start\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_start\\s*\\)\\s*,\\s*stop\\s*:\\s*time\\s*\\(\\s*v\\s*:\\s*params\\.n9time_stop\\s*\\)\\s*\\)'"
      details: must contain both 'params.n9time_start' and 'params.n9time_stop'
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.instana
    type: InstanaMetric
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.instana.application
    type: InstanaApplicationMetricType
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.instana.application.apiQuery
    type: string
    rules:
    - description: string must be a valid JSON
      errorCode: string_json
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.instana.application.groupBy.tagEntity
    type: string
    rules:
    - description: "must be one of: DESTINATION, SOURCE, NOT_APPLICABLE"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.instana.application.metricId
    type: string
    rules:
    - description: "must be one of: calls, erroneousCalls, errors, latency"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.instana.infrastructure
    type: InstanaInfrastructureMetricType
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.instana.infrastructure.metricRetrievalMethod
    type: string
    rules:
    - description: "must be one of: query, snapshot"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.instana.metricType
    type: string
    rules:
    - description: "must be one of: infrastructure, application"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.lightstep.percentile
    type: float64
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: should be less than or equal to '99.99'
      errorCode: less_than_or_equal_to
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.lightstep.streamId
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.lightstep.typeOfData
    type: string
    rules:
    - description: "must be one of: error_rate, latency, metric"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.lightstep.uql
    type: string
    rules:
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'latency'
    - description: "string must not match regular expression: '((constant|spans_sample|assemble)\\s+[a-z\\d.])'"
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'metric'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is either 'good' or 'total'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - typeOfData is 'error_rate'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.newRelic.nrql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must not match regular expression: '(?i)[\\n\\s](since|until)([\\n\\s]|$)'"
      details: query must not contain 'since' or 'until' keywords (case insensitive)
      errorCode: string_deny_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.opentsdb.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.pingdom.checkId
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^(?:|\\d+)$'"
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.pingdom.checkType
    type: string
    rules:
    - description: should be equal to 'uptime'
      errorCode: equal_to
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.pingdom.status
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'uptime'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - checkType is equal to 'transaction'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.prometheus.promql
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.redshift.query
    type: string
    rules:
    - description: "string must match regular expression: '^SELECT[\\s\\S]*\\bn9date\\b[\\s\\S]*FROM'"
      details: must contain 'n9date' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '^SELECT\\s[\\s\\S]*\\bn9value\\b[\\s\\S]*\\sFROM'"
      details: must contain 'n9value' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_from\\b[\\s\\S]*'"
      details: must filter by ':n9date_from' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: 'WHERE[\\s\\S]*\\W:n9date_to\\b[\\s\\S]*'"
      details: must filter by ':n9date_to' column
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.redshift.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.splunk.query
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
    - description: "string must contain the following substrings: 'n9time', 'n9value'"
      errorCode: string_contains
      conditions:
      - none of the objectives is of composite type
    - description: "string must match regular expression: '(\\bindex\\s*=.+)|(\"\\bindex\"\\s*=.+)' (e.g. 'index=svc-events', '\"index\"=svc-events')"
      details: query has to contain index=<NAME> or "index"=<NAME>
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.splunkObservability.program
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.sumoLogic.quantization
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.sumoLogic.query
    type: string
    rules:
    - description: TODO
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bn9_value\\b'"
      details: n9_value is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
    - description: "string must match regular expression: '(?m)\\bby\\b'"
      details: aggregation function is required
      errorCode: string_match_regexp
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.sumoLogic.rollup
    type: string
    rules:
    - description: "must be one of: Avg, Sum, Min, Max, Count, None"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
      - type is 'metrics'
    - description: property is forbidden
      errorCode: forbidden
      conditions:
      - none of the objectives is of composite type
      - type is 'logs'
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.sumoLogic.type
    type: string
    rules:
    - description: "must be one of: logs, metrics"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.thousandEyes.testID
    type: int64
    rules:
    - description: should be greater than or equal to '0'
      errorCode: greater_than_or_equal_to
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].rawMetric.query.thousandEyes.testType
    type: string
    rules:
    - description: "must be one of: net-latency, net-loss, web-page-load, web-dom-load, http-response-time, http-server-availability, http-server-throughput, http-server-total-time, dns-server-resolution-time, dns-dnssec-valid"
      errorCode: one_of
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].target
    type: float64
    rules:
    - description: should be greater than or equal to '0'
      errorCode: greater_than_or_equal_to
      conditions:
      - none of the objectives is of composite type
    - description: should be less than '1'
      errorCode: less_than
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.objectives[*].timeSliceTarget
    type: float64
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
      conditions:
      - none of the objectives is of composite type
    - description: should be less than or equal to '1'
      errorCode: less_than_or_equal_to
      conditions:
      - none of the objectives is of composite type
  - doc: TODO
    path: $.spec.service
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.timeWindows
    type: "[]slo.TimeWindow"
    rules:
    - description: length must be between 1 and 1
      errorCode: slice_length
  - doc: TODO
    path: $.spec.timeWindows[*]
    type: TimeWindow
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.timeWindows[*].calendar.startTime
    type: string
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.timeWindows[*].calendar.timeZone
    type: string
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.timeWindows[*].count
    type: int
    rules:
    - description: should be greater than '0'
      errorCode: greater_than
  - doc: TODO
    path: $.spec.timeWindows[*].unit
    type: string
    rules:
    - description: "must be one of: Second, Minute, Hour, Day, Week, Month, Quarter, Year"
      errorCode: one_of
- kind: Direct
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec
    type: Spec
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/direct
    rules:
    - description: TODO
      errorCode: exactly_one_data_source_type
    - description: TODO
    - description: TODO
      errorCode: query_delay_greater_than_or_equal_to_default
  - doc: TODO
    path: $.spec.appDynamics.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
    - description: TODO
      errorCode: https_scheme_required
  - doc: TODO
    path: $.spec.azureMonitor.tenantId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
  - doc: TODO
    path: $.spec.bigQuery.serviceAccountKey
    type: string
    rules:
    - description: string must be a valid JSON
      errorCode: string_json
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.datadog.site
    type: string
    rules:
    - description: "must be one of: eu, com, datadoghq.com, us3.datadoghq.com, us5.datadoghq.com, datadoghq.eu, ddog-gov.com, ap1.datadoghq.com"
      errorCode: one_of
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_description
  - doc: TODO
    path: $.spec.dynatrace.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
    - description: TODO
      errorCode: https_scheme_required
  - doc: TODO
    path: $.spec.gcm.serviceAccountKey
    type: string
    rules:
    - description: string must be a valid JSON
      errorCode: string_json
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.historicalDataRetrieval
    type: HistoricalDataRetrieval
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.historicalDataRetrieval.defaultDuration.unit
    type: HistoricalRetrievalDurationUnit
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: "must be one of: Day, Hour, Minute"
      errorCode: one_of
  - doc: TODO
    path: $.spec.historicalDataRetrieval.defaultDuration.value
    type: int
    rules:
    - description: should be greater than or equal to '0'
      errorCode: greater_than_or_equal_to
    - description: should be less than or equal to '43200'
      errorCode: less_than_or_equal_to
  - doc: TODO
    path: $.spec.historicalDataRetrieval.maxDuration.unit
    type: HistoricalRetrievalDurationUnit
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: "must be one of: Day, Hour, Minute"
      errorCode: one_of
  - doc: TODO
    path: $.spec.historicalDataRetrieval.maxDuration.value
    type: int
    rules:
    - description: should be greater than or equal to '0'
      errorCode: greater_than_or_equal_to
    - description: should be less than or equal to '43200'
      errorCode: less_than_or_equal_to
  - doc: TODO
    path: $.spec.influxdb.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
    - description: TODO
      errorCode: https_scheme_required
  - doc: TODO
    path: $.spec.instana.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
    - description: TODO
      errorCode: https_scheme_required
  - doc: TODO
    path: $.spec.lightstep.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
  - doc: TODO
    path: $.spec.newRelic.accountId
    type: int
    rules:
    - description: should be greater than or equal to '1'
      errorCode: greater_than_or_equal_to
  - doc: TODO
    path: $.spec.newRelic.insightsQueryKey
    type: string
    rules:
    - description: string must start with 'NRIQ-' prefix
      errorCode: string_starts_with
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.queryDelay
    type: Duration
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.queryDelay.unit
    type: DurationUnit
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: "must be one of: Minute, Second"
      errorCode: one_of
  - doc: TODO
    path: $.spec.releaseChannel
    type: ReleaseChannel
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: "must be one of: stable, beta"
      errorCode: one_of
  - doc: TODO
    path: $.spec.splunk.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
    - description: TODO
      errorCode: https_scheme_required
  - doc: TODO
    path: $.spec.sumoLogic.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
    - description: TODO
      errorCode: https_scheme_required
- kind: Agent
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec
    type: Spec
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/agent
    rules:
    - description: TODO
      errorCode: exactly_one_data_source_type
    - description: TODO
    - description: TODO
      errorCode: query_delay_greater_than_or_equal_to_default
  - doc: TODO
    path: $.spec.amazonPrometheus.region
    type: string
    rules:
    - description: length must be less than or equal to 255
      errorCode: string_max_length
  - doc: TODO
    path: $.spec.amazonPrometheus.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.appDynamics.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.azureMonitor.tenantId
    type: string
    rules:
    - description: "string must match regular expression: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' (e.g. '0000000-0000-0000-0000-000000000000', 'e190c630-8873-11ee-b9d1-0242ac120002', '79258D24-01A7-47E5-ACBB-7E762DE52298')"
      details: expected RFC-4122 compliant UUID string
      errorCode: string_uuid
  - doc: TODO
    path: $.spec.datadog.site
    type: string
    rules:
    - description: "must be one of: eu, com, datadoghq.com, us3.datadoghq.com, us5.datadoghq.com, datadoghq.eu, ddog-gov.com, ap1.datadoghq.com"
      errorCode: one_of
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_description
  - doc: TODO
    path: $.spec.dynatrace.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
    - description: TODO
  - doc: TODO
    path: $.spec.elasticsearch.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.grafanaLoki.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.graphite.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.historicalDataRetrieval
    type: HistoricalDataRetrieval
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.historicalDataRetrieval.defaultDuration.unit
    type: HistoricalRetrievalDurationUnit
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: "must be one of: Day, Hour, Minute"
      errorCode: one_of
  - doc: TODO
    path: $.spec.historicalDataRetrieval.defaultDuration.value
    type: int
    rules:
    - description: should be greater than or equal to '0'
      errorCode: greater_than_or_equal_to
    - description: should be less than or equal to '43200'
      errorCode: less_than_or_equal_to
  - doc: TODO
    path: $.spec.historicalDataRetrieval.maxDuration.unit
    type: HistoricalRetrievalDurationUnit
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: "must be one of: Day, Hour, Minute"
      errorCode: one_of
  - doc: TODO
    path: $.spec.historicalDataRetrieval.maxDuration.value
    type: int
    rules:
    - description: should be greater than or equal to '0'
      errorCode: greater_than_or_equal_to
    - description: should be less than or equal to '43200'
      errorCode: less_than_or_equal_to
  - doc: TODO
    path: $.spec.influxdb.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.instana.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.lightstep.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
  - doc: TODO
    path: $.spec.newRelic.accountId
    type: int
    rules:
    - description: should be greater than or equal to '1'
      errorCode: greater_than_or_equal_to
  - doc: TODO
    path: $.spec.opentsdb.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.prometheus.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.queryDelay
    type: Duration
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.queryDelay.unit
    type: DurationUnit
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: "must be one of: Minute, Second"
      errorCode: one_of
  - doc: TODO
    path: $.spec.releaseChannel
    type: ReleaseChannel
    package: github.com/nobl9/nobl9-go/manifest/v1alpha
    rules:
    - description: "must be one of: stable, beta"
      errorCode: one_of
  - doc: TODO
    path: $.spec.splunk.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
  - doc: TODO
    path: $.spec.sumoLogic.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
- kind: AlertMethod
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec
    type: Spec
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/alertmethod
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_length
  - doc: TODO
    path: $.spec.discord.url
    type: string
    rules:
    - description: TODO
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.email
    type: EmailAlertMethod
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/alertmethod
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.email.bcc
    type: "[]string"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
  - doc: TODO
    path: $.spec.email.cc
    type: "[]string"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
  - doc: TODO
    path: $.spec.email.to
    type: "[]string"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
  - doc: TODO
    path: $.spec.jira.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
    - description: TODO
  - doc: TODO
    path: $.spec.msteams.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: url
      conditions:
      - is empty or equal to '[hidden]'
    - description: TODO
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.opsgenie.auth
    type: string
    rules:
    - description: TODO
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.opsgenie.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.pagerduty.integrationKey
    type: string
    rules:
    - description: length must be less than or equal to 32
      errorCode: string_max_length
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.slack.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
      conditions:
      - is empty or equal to '[hidden]'
  - doc: TODO
    path: $.spec.webhook
    type: WebhookAlertMethod
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/alertmethod
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.webhook.headers
    type: "[]alertmethod.WebhookHeader"
    rules:
    - description: length must be less than or equal to 10
      errorCode: slice_max_length
  - doc: TODO
    path: $.spec.webhook.headers[*].name
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
    - description: "string must match regular expression: '^([a-zA-Z0-9]+[_-]?)+$'"
      details: must be a valid header name
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.webhook.headers[*].value
    type: string
    rules:
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - isSecret is false
    - description: string cannot be empty
      errorCode: string_not_empty
      conditions:
      - isSecret is true
  - doc: TODO
    path: $.spec.webhook.template
    type: string
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.webhook.templateFields
    type: "[]string"
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.webhook.url
    type: string
    rules:
    - description: valid URL must have a scheme (e.g. https://) and contain either host, fragment or opaque data
      errorCode: string_url
      conditions:
      - is empty or equal to '[hidden]'
- kind: AlertPolicy
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.annotations
    type: string
    examples:
    - |-
      team: sales
      env: prod
      region: us
      area: latency
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^\\p{Ll}([_\\-0-9\\p{Ll}]*[0-9\\p{Ll}])?$'"
      errorCode: string_match_regexp
    - description: length must be less than or equal to 1050
      errorCode: string_max_length
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.labels
    type: string
    examples:
    - |-
      team:
        - green
        - sales
      env:
        - prod
        - dev
      region:
        - us
        - eu
      area:
        - latency
        - slow-check
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^\\p{Ll}([_\\-0-9\\p{Ll}]*[0-9\\p{Ll}])?$'"
      errorCode: string_match_regexp
    - description: elements must be unique
      errorCode: slice_unique
    - description: length must be less than or equal to 200
      errorCode: string_max_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.alertMethods[*].metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.alertMethods[*].metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.conditions
    type: "[]alertpolicy.AlertCondition"
    rules:
    - description: length must be greater than or equal to 1
      errorCode: slice_min_length
  - doc: TODO
    path: $.spec.conditions[*]
    type: AlertCondition
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/alertpolicy
    rules:
    - description: "properties are mutually exclusive: lastsFor, alertingWindow"
      errorCode: mutually_exclusive
    - description: TODO
  - doc: TODO
    path: $.spec.conditions[*].alertingWindow
    type: string
    rules:
    - description: duration must be defined with 1m0s precision
      errorCode: duration_precision
    - description: should be greater than or equal to '5m0s'
      errorCode: greater_than_or_equal_to
    - description: should be less than or equal to '168h0m0s'
      errorCode: less_than_or_equal_to
  - doc: TODO
    path: $.spec.conditions[*].lastsFor
    type: string
    rules:
    - description: should be greater than or equal to '0s'
      errorCode: greater_than_or_equal_to
  - doc: TODO
    path: $.spec.conditions[*].measurement
    type: string
    rules:
    - description: "must be one of: burnedBudget, averageBurnRate, timeToBurnBudget, timeToBurnEntireBudget"
      errorCode: one_of
  - doc: TODO
    path: $.spec.conditions[*].op
    type: AlertCondition
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/alertpolicy
    rules:
    - description: TODO
  - doc: TODO
    path: $.spec.conditions[*].value
    type: ""
    rules:
    - description: should be greater than '0s'
      errorCode: greater_than
      conditions:
      - measurement is is either 'timeToBurnBudget' or 'timeToBurnEntireBudget'
  - doc: TODO
    path: $.spec.coolDown
    type: string
    rules:
    - description: should be greater than or equal to '5m0s'
      errorCode: greater_than_or_equal_to
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_description
  - doc: TODO
    path: $.spec.severity
    type: string
    rules:
    - description: "must be one of: Low, Medium, High"
      errorCode: one_of
- kind: AlertSilence
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $
    type: AlertSilence
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/alertsilence
    rules:
    - description: TODO
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.alertPolicy.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.alertPolicy.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_description
  - doc: TODO
    path: $.spec.period
    type: Period
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/alertsilence
    rules:
    - description: "properties are mutually exclusive: duration, endTime"
      errorCode: mutually_exclusive
    - description: TODO
      conditions:
      - ""
  - doc: TODO
    path: $.spec.period.duration
    type: string
    rules:
    - description: should be greater than '0s'
      errorCode: greater_than
      conditions:
      - ""
  - doc: TODO
    path: $.spec.slo
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
- kind: Alert
  version: n9/v1alpha
  properties: []
- kind: Annotation
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec
    type: Spec
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/annotation
    rules:
    - description: TODO
    - description: TODO
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1000
      errorCode: string_length
  - doc: TODO
    path: $.spec.objectiveName
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.slo
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
- kind: BudgetAdjustment
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.description
    type: string
    rules:
    - description: length must be between 0 and 1050
      errorCode: string_description
  - doc: TODO
    path: $.spec.duration
    type: string
    rules:
    - description: duration must be defined with 1m0s precision
      errorCode: duration_precision
  - doc: TODO
    path: $.spec.filters.slos
    type: "[]budgetadjustment.SLORef"
    rules:
    - description: length must be greater than or equal to 1
      errorCode: slice_min_length
  - doc: TODO
    path: $.spec.filters.slos[*].name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.filters.slos[*].project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
- kind: DataExport
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.metadata.project
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.exportType
    type: string
    rules:
    - description: "must be one of: S3, Snowflake, GCS"
      errorCode: one_of
  - doc: TODO
    path: $.spec.spec.bucketName
    type: string
    rules:
    - description: "string must match regular expression: '^[a-z0-9][a-z0-9\\-.]{1,61}[a-z0-9]$'"
      details: must be a valid S3 bucket name
      errorCode: string_match_regexp
      conditions:
      - exportType is either 'S3' or 'Snowflake'
    - description: length must be between 3 and 222
      errorCode: string_length
      conditions:
      - exportType is 'GCS'
    - description: "string must match regular expression: '^[a-z0-9][a-z0-9-_]{1,61}[a-z0-9]$'"
      details: must be a valid GCS bucket name
      errorCode: string_match_regexp
      conditions:
      - exportType is 'GCS'
      - bucketName length is less than or equal to 63
    - description: "string must match regular expression: '^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$'"
      details: must be a valid GCS bucket name
      errorCode: string_match_regexp
      conditions:
      - exportType is 'GCS'
      - bucketName length is greater than 63
  - doc: TODO
    path: $.spec.spec.roleArn
    type: string
    rules:
    - description: length must be between 20 and 2048
      errorCode: string_length
      conditions:
      - exportType is either 'S3' or 'Snowflake'
    - description: "string must match regular expression: '^[\\x{0009}\\x{000A}\\x{000D}\\x{0020}-\\x{007E}\\x{0085}\\x{00A0}-\\x{D7FF}\\x{E000}-\\x{FFFD}\\x{10000}-\\x{10FFFF}]+$'"
      details: must be a valid ARN
      errorCode: string_match_regexp
      conditions:
      - exportType is either 'S3' or 'Snowflake'
- kind: UserGroup
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec.displayName
    type: string
    rules:
    - description: length must be between 0 and 63
      errorCode: string_length
- kind: RoleBinding
  version: n9/v1alpha
  properties:
  - doc: TODO
    path: $.metadata.name
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
  - doc: TODO
    path: $.spec
    type: Spec
    package: github.com/nobl9/nobl9-go/manifest/v1alpha/rolebinding
    rules:
    - description: "properties are mutually exclusive: groupRef, user"
      errorCode: mutually_exclusive
  - doc: TODO
    path: $.spec.projectRef
    type: string
    rules:
    - description: length must be between 1 and 63
      errorCode: string_length
    - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
      details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
      errorCode: string_match_regexp
---
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/AmazonPrometheusMetric:
  name: AmazonPrometheusMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    AmazonPrometheusMetric represents metric from Amazon Managed Prometheus
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/AnomalyConfig:
  name: AnomalyConfig
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    AnomalyConfig represents relationship between anomaly type and selected notification methods.
    This will be removed (moved into Anomaly Policy) in PC-8502
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/AnomalyConfigAlertMethod:
  name: AnomalyConfigAlertMethod
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    AnomalyConfigAlertMethod represents a single alert method used in AnomalyConfig
    defined by name and project.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/AnomalyConfigNoData:
  name: AnomalyConfigNoData
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    AnomalyConfigNoData contains alertMethods used for No Data anomaly type.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/AppDynamicsMetric:
  name: AppDynamicsMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    AppDynamicsMetric represents metric from AppDynamics
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Attachment:
  name: Attachment
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Attachment represents user defined URL attached to SLO
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/AzureMonitorMetric:
  name: AzureMonitorMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    AzureMonitorMetric represents metric from AzureMonitor
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/AzureMonitorMetricDimension:
  name: AzureMonitorMetricDimension
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    AzureMonitorMetricDimension represents name/value pair that is part of the identity of a metric.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/AzureMonitorMetricLogAnalyticsWorkspace:
  name: AzureMonitorMetricLogAnalyticsWorkspace
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    AzureMonitorMetricLogAnalyticsWorkspace represents Azure Log Analytics Workspace
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/BigQueryMetric:
  name: BigQueryMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    BigQueryMetric represents metric from BigQuery
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/BudgetingMethod:
  name: BudgetingMethod
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    BudgetingMethod indicates algorithm to calculate error budget
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Calendar:
  name: Calendar
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Calendar struct represents calendar time window
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/CloudWatchMetric:
  name: CloudWatchMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    CloudWatchMetric represents metric from CloudWatch.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/CloudWatchMetricDimension:
  name: CloudWatchMetricDimension
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    CloudWatchMetricDimension represents name/value pair that is part of the identity of a metric.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Components:
  name: Components
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Composite:
  name: Composite
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Composite represents configuration for Composite SLO.
    Deprecated: this implementation of Composite will be removed and replaced with new CompositeSpec
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/CompositeBurnRateCondition:
  name: CompositeBurnRateCondition
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    CompositeBurnRateCondition represents configuration for Composite SLO  with occurrences budgeting method.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/CompositeObjective:
  name: CompositeObjective
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/CompositeSpec:
  name: CompositeSpec
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    CompositeSpec represents a composite of SLOs and Composite SLOs.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/CompositeVersion:
  name: CompositeVersion
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    CompositeVersion represents composite version history stored for restoring process.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/CountMetricsSpec:
  name: CountMetricsSpec
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    CountMetricsSpec represents set of two time series of good and total counts
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/DatadogMetric:
  name: DatadogMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    DatadogMetric represents metric from Datadog
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/DynatraceMetric:
  name: DynatraceMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    DynatraceMetric represents metric from Dynatrace.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/ElasticsearchMetric:
  name: ElasticsearchMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    ElasticsearchMetric represents metric from Elasticsearch.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/GCMMetric:
  name: GCMMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    GCMMetric represents metric from GCM
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/GenericMetric:
  name: GenericMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/GrafanaLokiMetric:
  name: GrafanaLokiMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    GrafanaLokiMetric represents metric from GrafanaLokiMetric.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/GraphiteMetric:
  name: GraphiteMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    GraphiteMetric represents metric from Graphite.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/HoneycombMetric:
  name: HoneycombMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    HoneycombMetric represents metric from Honeycomb.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Indicator:
  name: Indicator
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Indicator represents integration with metric source can be. e.g. Prometheus, Datadog, for internal usage
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/InfluxDBMetric:
  name: InfluxDBMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    InfluxDBMetric represents metric from InfluxDB
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/InstanaApplicationMetricGroupBy:
  name: InstanaApplicationMetricGroupBy
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/InstanaApplicationMetricType:
  name: InstanaApplicationMetricType
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/InstanaInfrastructureMetricType:
  name: InstanaInfrastructureMetricType
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/InstanaMetric:
  name: InstanaMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    InstanaMetric represents metric from Redshift.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/LightstepMetric:
  name: LightstepMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    LightstepMetric represents metric from Lightstep
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Metadata:
  name: Metadata
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Metadata provides identity information for SLO.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/MetricSourceSpec:
  name: MetricSourceSpec
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/MetricSpec:
  name: MetricSpec
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    MetricSpec defines single time series obtained from data source
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/NewRelicMetric:
  name: NewRelicMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    NewRelicMetric represents metric from NewRelic
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Objective:
  name: Objective
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Objective represents single objective for SLO, for internal usage
  structfields:
    composite:
      name: Composite
      package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
      doc: |
        Composite is not yet supported, applying it will have no effect
      structfields: {}
    target:
      name: BudgetTarget
      package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
      doc: |
        <!-- Go struct field and type names renaming budgetTarget to target has been postponed after GA as requested
        in PC-1240. -->
      structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/ObjectiveBase:
  name: ObjectiveBase
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    ObjectiveBase base structure representing an objective.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/OpenTSDBMetric:
  name: OpenTSDBMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    OpenTSDBMetric represents metric from OpenTSDB.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Period:
  name: Period
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Period represents period of time
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/PingdomMetric:
  name: PingdomMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    PingdomMetric represents metric from Pingdom.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/PrometheusMetric:
  name: PrometheusMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    PrometheusMetric represents metric from Prometheus
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/RawMetricSpec:
  name: RawMetricSpec
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    RawMetricSpec represents integration with a metric source for a particular objective.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/RedshiftMetric:
  name: RedshiftMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    RedshiftMetric represents metric from Redshift.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/ReplayStatus:
  name: ReplayStatus
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/SLO:
  name: SLO
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    SLO struct which mapped one to one with kind: slo yaml definition, external usage
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Spec:
  name: Spec
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Spec holds detailed information specific to SLO.
  structfields:
    composite:
      name: Composite
      package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
      doc: |
        Deprecated: this implementation of Composite wil be removed and replaced with new CompositeSpec
      structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/SplunkMetric:
  name: SplunkMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    SplunkMetric represents metric from Splunk
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/SplunkObservabilityMetric:
  name: SplunkObservabilityMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    SplunkObservabilityMetric represents metric from SplunkObservability
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/Status:
  name: Status
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    Status holds dynamic fields returned when the Service is fetched from Nobl9 platform.
    Status is not part of the static object definition.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/SumoLogicMetric:
  name: SumoLogicMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    SumoLogicMetric represents metric from Sumo Logic.
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/ThousandEyesMetric:
  name: ThousandEyesMetric
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    ThousandEyesMetric represents metric from ThousandEyes
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/TimeWindow:
  name: TimeWindow
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    TimeWindow represents content of time window
  structfields:
    period:
      name: Period
      package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
      doc: |
        Period is only returned in `/get/slo` requests it is ignored for `/apply`
      structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/WhenDelayed:
  name: WhenDelayed
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: |
    WhenDelayed represents enum for behavior of Composite SLO objectives
     ENUM(
    CountAsGood
    CountAsBad
    Ignore
    )
  structfields: {}
github.com/nobl9/nobl9-go/manifest/v1alpha/slo/parsedSumoLogicSlice:
  name: parsedSumoLogicSlice
  package: github.com/nobl9/nobl9-go/manifest/v1alpha/slo
  doc: ""
  structfields: {}
S bucket name
        errorCode: string_match_regexp
        conditions:
        - exportType is 'GCS'
        - bucketName length is less than or equal to 63
      - description: "string must match regular expression: '^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$'"
        details: must be a valid GCS bucket name
        errorCode: string_match_regexp
        conditions:
        - exportType is 'GCS'
        - bucketName length is greater than 63
  - doc: ""
    propertyplan:
      path: $.spec.spec.roleArn
      type: string
      rules:
      - description: length must be between 20 and 2048
        errorCode: string_length
        conditions:
        - exportType is either 'S3' or 'Snowflake'
      - description: "string must match regular expression: '^[\\x{0009}\\x{000A}\\x{000D}\\x{0020}-\\x{007E}\\x{0085}\\x{00A0}-\\x{D7FF}\\x{E000}-\\x{FFFD}\\x{10000}-\\x{10FFFF}]+$'"
        details: must be a valid ARN
        errorCode: string_match_regexp
        conditions:
        - exportType is either 'S3' or 'Snowflake'
- kind: UserGroup
  version: n9/v1alpha
  properties:
  - doc: ""
    propertyplan:
      path: $.metadata.name
      type: string
      rules:
      - description: length must be between 1 and 63
        errorCode: string_length
      - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
        details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
        errorCode: string_match_regexp
  - doc: ""
    propertyplan:
      path: $.spec.displayName
      type: string
      rules:
      - description: length must be between 0 and 63
        errorCode: string_length
- kind: RoleBinding
  version: n9/v1alpha
  properties:
  - doc: ""
    propertyplan:
      path: $.metadata.name
      type: string
      rules:
      - description: length must be between 1 and 63
        errorCode: string_length
      - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
        details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
        errorCode: string_match_regexp
  - doc: ""
    propertyplan:
      path: $.spec
      type: Spec
      package: github.com/nobl9/nobl9-go/manifest/v1alpha/rolebinding
      rules:
      - description: "properties are mutually exclusive: user, groupRef"
        errorCode: mutually_exclusive
  - doc: ""
    propertyplan:
      path: $.spec.projectRef
      type: string
      rules:
      - description: length must be between 1 and 63
        errorCode: string_length
      - description: "string must match regular expression: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$' (e.g. 'my-name', '123-abc')"
        details: a DNS-1123 compliant name must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character
        errorCode: string_match_regexp
